name: golangci-lint
on:
  push:
    branches:
      - main
    paths-ignore:
    - 'README.md'
    - '.github/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'README.md'
jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: check-errorf
        run: |
          #!/bin/bash
          
          set -eo pipefail
          
          echo 'Scanning for usage of `fmt.Errorf`...'
          echo
          
          if grep -nr --include \*.go fmt.Errorf internal; then
            cat <<EOF
          
          -----------------------------------------------------------------
          ERROR: Usage of \`fmt.Errorf\` detected!
          
          Please use \`errors.Errorf\` instead.
          
          This allows us to log errors with stack traces:
            https://github.com/rs/zerolog#error-logging-with-stacktrace
          -----------------------------------------------------------------
          
          EOF
            exit 1
          fi

      - name: check-errors-package
        run: |
          #!/bin/bash
          
          set -eo pipefail
          
          echo 'Scanning for usage of "errors" package...'
          echo

          if grep -nr --include \*.go '^\(import\)?[[:space:]]*"errors"' internal; then
            cat <<EOF
          
          -----------------------------------------------------------------
          ERROR: Usage of "errors" package detected!
          
          Please use "github.com/pkg/errors" instead.
          
          This allows us to log errors with stack traces:
            https://github.com/rs/zerolog#error-logging-with-stacktrace          
          -----------------------------------------------------------------
          
          EOF
            exit 1
          fi

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          args: --timeout 5m --verbose

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the action will use pre-installed Go.
          # skip-go-installation: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true
