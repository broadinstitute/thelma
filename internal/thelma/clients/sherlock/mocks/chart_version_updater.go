// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ChartVersionUpdater is an autogenerated mock type for the ChartVersionUpdater type
type ChartVersionUpdater struct {
	mock.Mock
}

type ChartVersionUpdater_Expecter struct {
	mock *mock.Mock
}

func (_m *ChartVersionUpdater) EXPECT() *ChartVersionUpdater_Expecter {
	return &ChartVersionUpdater_Expecter{mock: &_m.Mock}
}

// UpdateForNewChartVersion provides a mock function with given fields: chartSelector, newVersion, lastVersion, description, chartReleaseSelectors
func (_m *ChartVersionUpdater) UpdateForNewChartVersion(chartSelector string, newVersion string, lastVersion string, description string, chartReleaseSelectors []string) error {
	ret := _m.Called(chartSelector, newVersion, lastVersion, description, chartReleaseSelectors)

	if len(ret) == 0 {
		panic("no return value specified for UpdateForNewChartVersion")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string, string, []string) error); ok {
		r0 = rf(chartSelector, newVersion, lastVersion, description, chartReleaseSelectors)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ChartVersionUpdater_UpdateForNewChartVersion_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateForNewChartVersion'
type ChartVersionUpdater_UpdateForNewChartVersion_Call struct {
	*mock.Call
}

// UpdateForNewChartVersion is a helper method to define mock.On call
//   - chartSelector string
//   - newVersion string
//   - lastVersion string
//   - description string
//   - chartReleaseSelectors []string
func (_e *ChartVersionUpdater_Expecter) UpdateForNewChartVersion(chartSelector interface{}, newVersion interface{}, lastVersion interface{}, description interface{}, chartReleaseSelectors interface{}) *ChartVersionUpdater_UpdateForNewChartVersion_Call {
	return &ChartVersionUpdater_UpdateForNewChartVersion_Call{Call: _e.mock.On("UpdateForNewChartVersion", chartSelector, newVersion, lastVersion, description, chartReleaseSelectors)}
}

func (_c *ChartVersionUpdater_UpdateForNewChartVersion_Call) Run(run func(chartSelector string, newVersion string, lastVersion string, description string, chartReleaseSelectors []string)) *ChartVersionUpdater_UpdateForNewChartVersion_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string), args[2].(string), args[3].(string), args[4].([]string))
	})
	return _c
}

func (_c *ChartVersionUpdater_UpdateForNewChartVersion_Call) Return(_a0 error) *ChartVersionUpdater_UpdateForNewChartVersion_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ChartVersionUpdater_UpdateForNewChartVersion_Call) RunAndReturn(run func(string, string, string, string, []string) error) *ChartVersionUpdater_UpdateForNewChartVersion_Call {
	_c.Call.Return(run)
	return _c
}

// NewChartVersionUpdater creates a new instance of ChartVersionUpdater. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewChartVersionUpdater(t interface {
	mock.TestingT
	Cleanup(func())
}) *ChartVersionUpdater {
	mock := &ChartVersionUpdater{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
